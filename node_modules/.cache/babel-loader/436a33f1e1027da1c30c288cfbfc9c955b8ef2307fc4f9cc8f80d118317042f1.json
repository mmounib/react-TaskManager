{"ast":null,"code":"var _jsxFileName = \"/Users/mmounib/Desktop/react-projects/src/Components/Tasks.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Doctors Appointment\",\n    day: \"5th Fab 2020\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"Play Football\",\n    day: \"12th Fab 2020\",\n    reminder: true\n  }, {\n    id: 3,\n    text: \"Study Geography\",\n    day: \"23th Fab 2020\",\n    reminder: false\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 30\n    }, this))\n  }, void 0, false);\n};\n_s(Tasks, \"CvWgMKPZ4UzY/9YoyQ7TawYvFAs=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","tasks","setTasks","id","text","day","reminder","children","map","task","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mmounib/Desktop/react-projects/src/Components/Tasks.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\n\n\nconst Tasks = () => {\n\n    const [tasks, setTasks] = useState([\n        {\n            id: 1,\n            text: \"Doctors Appointment\",\n            day: \"5th Fab 2020\",\n            reminder: true,\n        },\n        {\n            id: 2,\n            text: \"Play Football\",\n            day: \"12th Fab 2020\",\n            reminder: true,\n        },\n        {\n            id: 3,\n            text: \"Study Geography\",\n            day: \"23th Fab 2020\",\n            reminder: false,\n        }\n    ]);\n\n    return (\n    <>\n      {tasks.map( (task) => (<h3>{task.text}</h3>) )}\n    </>\n  )\n}\n\nexport default Tasks\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG3C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAC/B;IACIU,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,qBAAqB;IAC3BC,GAAG,EAAE,cAAc;IACnBC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,eAAe;IACrBC,GAAG,EAAE,eAAe;IACpBC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,iBAAiB;IACvBC,GAAG,EAAE,eAAe;IACpBC,QAAQ,EAAE;EACd,CAAC,CACJ,CAAC;EAEF,oBACAV,OAAA,CAAAE,SAAA;IAAAS,QAAA,EACGN,KAAK,CAACO,GAAG,CAAGC,IAAI,iBAAMb,OAAA;MAAAW,QAAA,EAAKE,IAAI,CAACL;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAG;EAAC,gBAC9C,CAAC;AAEP,CAAC;AAAAb,EAAA,CA5BKD,KAAK;AAAAe,EAAA,GAALf,KAAK;AA8BX,eAAeA,KAAK;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}